name: Build Python Program to EXE

on:
  workflow_dispatch:

jobs:
  build-windows:
    name: Build EXE for Windows
    runs-on: windows-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Remove Previous Executables
      run: |
        if (Test-Path -Path dist) { Remove-Item -Recurse -Force dist }

    - name: Build EXE with PyInstaller
      run: |
        pyinstaller --onefile main.py --name SecureEncryptionSystem

    - name: Package Windows Executable
      run: |
        echo "Packaging Windows executable..."
        New-Item -ItemType Directory -Force -Path dist/windows
        Move-Item -Force dist/SecureEncryptionSystem.exe dist/windows/SecureEncryptionSystem.exe
        Compress-Archive -Path dist/windows/* -DestinationPath dist/windows/SecureEncryptionSystem.zip
        echo "archive=dist/windows/SecureEncryptionSystem.zip" >> $GITHUB_ENV
        
    - name: Push changes
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"        
        git add .
        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m "Compiled Windows executable"
          git push origin main
        fi
      
      

  build-linux:
    name: Build EXE for Linux
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Remove Previous Executables
      run: |
        rm -rf dist/*

    - name: Build Executable for Linux
      run: |
        pyinstaller --onefile main.py --name SecureEncryptionSystem

    - name: Package Linux Executable
      run: |
        echo "Packaging Linux executable..."
        mkdir -p dist/linux
        mv dist/SecureEncryptionSystem dist/linux/SecureEncryptionSystem
        cd dist/linux
        zip -r SecureEncryptionSystem.zip SecureEncryptionSystem
        echo "archive=dist/linux/SecureEncryptionSystem.zip" >> $GITHUB_ENV
    
    - name: Push changes
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"        
        git add .
        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m "Compiled Windows executable"
          git push origin main
        fi

